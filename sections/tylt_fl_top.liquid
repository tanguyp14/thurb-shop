{% schema %}
{
  "name": "TYLT - FIRSTLOVE TOP",
  "settings": [
    {
      "type": "text",
      "id": "intro_text",
      "label": "Titre",
      "default": "Quel sera votre premier amour ?"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Couleur du fond",
      "default": "#ADF3FF"
    },
    {
      "type": "image_picker",
      "id": "small_cloud_image",
      "label": "Petit Nuages"
    },
    {
      "type": "image_picker",
      "id": "large_cloud_image",
      "label": "Gros Nuage"
    }
  ],
  "blocks": [
    {
      "type": "text_block",
      "name": "Ville",
      "settings": [
        {
          "type": "text",
          "id": "ville_name",
          "label": "Ville",
          "default": "Nom de la ville"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "TYLT - FIRSTLOVE TOP"
    }
  ]
}
{% endschema %}

<!-- Dans votre section Liquid -->
<section class="tylt_fl_top" style="background-color:{{ section.settings.bg_color }};">
  <div class="tylt_fl_top__text">
    <h1>{{ section.settings.intro_text }}</h1>
    <!-- Conteneur unique pour les villes -->
    <div class="tylt_fl_top__text__cities">
      <div class="tylt_fl_top__text__cities__display">
        <!-- Les noms de ville seront insérés ici par JavaScript -->
      </div>
    </div>
  </div>
  <div class="tylt_fl_top__clouds">
    {% if section.settings.small_cloud_image %}
      <div class="tylt_fl_top__clouds__small one">
        <img src="{{ section.settings.small_cloud_image | img_url: 'master' }}" alt="Petit Nuage">
      </div>
      <div class="tylt_fl_top__clouds__small two">
        <img src="{{ section.settings.small_cloud_image | img_url: 'master' }}" alt="Petit Nuage">
      </div>
      <div class="tylt_fl_top__clouds__small tree">
        <img src="{{ section.settings.small_cloud_image | img_url: 'master' }}" alt="Petit Nuage">
      </div>
    {% endif %}
  </div>
  <div class="tylt_fl_top__clouds__large">
    {% if section.settings.large_cloud_image %}
      <div class="tylt_fl_top__clouds__large one">
        <img src="{{ section.settings.large_cloud_image | img_url: 'master' }}" alt="Petit Nuage">
      </div>
    {% endif %}
  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const cities = [
    {% for block in section.blocks %}
      {% if block.type == 'text_block' %}
        "{{ block.settings.ville_name }}"{% unless forloop.last %},{% endunless %}
      {% endif %}
    {% endfor %}
  ];

  const displayContainer = document.querySelector('.tylt_fl_top__text__cities__display');

  if (cities.length > 0 && displayContainer) {
    // Créer toutes les villes
    const cityElements = [];
    cities.forEach(cityName => {
      const cityDiv = document.createElement('div');
      cityDiv.className = 'city';

      for (let i = 0; i < cityName.length; i++) {
        const span = document.createElement('span');
        span.textContent = cityName[i];
        span.style.display = 'inline-block';
        span.style.transform = 'translateY(100%)';
        span.style.transition = 'transform 0.5s ease';

        cityDiv.appendChild(span);
      }

      displayContainer.appendChild(cityDiv);
      cityElements.push({element: cityDiv, name: cityName});
    });

    // Fonction d'animation pour une ville
    function animateCity(cityIndex) {
      const city = cityElements[cityIndex];
      const cityName = city.name;
      const cityElement = city.element;
      const spans = cityElement.querySelectorAll('span');
      const delayPerLetter = 500 / cityName.length;
      const displayTime = 2000;

      // Apparition depuis le bas (100% -> 0%)
      spans.forEach((span, i) => {
        setTimeout(() => {
          span.style.transform = 'translateY(0)';
        }, i * delayPerLetter);
      });

      // Disparition vers le haut (0% -> -100%) + lancement simultané de la ville suivante
      setTimeout(() => {
        spans.forEach((span, i) => {
          setTimeout(() => {
            span.style.transform = 'translateY(-100%)';
          }, i * delayPerLetter);
        });

        // Début de la ville suivante avec un léger délai
        setTimeout(() => {
          const nextIndex = (cityIndex + 1) % cities.length;
          animateCity(nextIndex);
        }, 0); // Léger délai de 0ms après le début de la disparition

        // Retour brutal à 100% sans animation pour la ville actuelle
        setTimeout(() => {
          spans.forEach(span => {
            span.style.transition = 'none';
            span.style.transform = 'translateY(100%)';
            
            setTimeout(() => {
              span.style.transition = 'transform 0.5s ease';
            }, 50);
          });
        }, 700);
      }, displayTime);
    }

    // Démarrer l'animation avec la première ville
    animateCity(0);
  }

 // Nouveau code pour les nuages
  const clouds = document.querySelectorAll('.tylt_fl_top__clouds__small');

  clouds.forEach((cloud, index) => {
    // Position top aléatoire initiale entre 5% et 95%
    const randomTop = Math.random() * 60 + 5;
    cloud.style.top = randomTop + '%';

    // Position left aléatoire entre 0% et 80%
    const randomLeft = Math.random() * 80;
    cloud.style.left = randomLeft + '%';

    // Style de base
    cloud.style.position = 'absolute';

    // Fonction pour animer un nuage
    function animateCloud() {
      // Durée aléatoire entre 7000 et 10000 ms, par pas de 1000 ms
      const duration = 7000 + Math.floor(Math.random() * 4) * 1000;
      
      // Appliquer la transition avec la durée aléatoire
      cloud.style.transition = `left ${duration}ms linear`;
      
      // Aller vers 100% + largeur
      setTimeout(() => {
        const cloudWidth = cloud.offsetWidth;
        cloud.style.left = `calc(100% + ${cloudWidth}px)`;

        // Quand l'animation est terminée, téléporter à 0% et recommencer
        setTimeout(() => {
          cloud.style.transition = 'none'; // Supprimer l'animation
          cloud.style.left = `calc(0% - ${cloudWidth}px)`; // Téléporter à gauche (hors écran)

          // Nouvelle position top aléatoire à chaque cycle
          const newRandomTop = Math.random() * 60 + 5;
          cloud.style.top = newRandomTop + '%';

          // Remettre l'animation et relancer
          setTimeout(() => {
            animateCloud(); // Relancer l'animation avec une nouvelle durée
          }, 50);
        }, duration); // Durée aléatoire de l'animation
      }, index); // Délai différent pour chaque nuage
    }

    // Démarrer l'animation
    animateCloud();
  });

});
</script>
